# Used for calculating objective team in match data in Server
#
# Example:
#
# {'auto_balls_high': 67,
# 'auto_balls_low': 31,
# 'climb_time': 8,
# 'confidence_rating': 86,
# 'control_panel_position': False,
# 'control_panel_rotation': True,
# 'incap': 8,
# 'match_number': 8,
# 'team_number': 79,
# 'tele_balls_high': 97,
# 'tele_balls_low': 11}
#


# Contains information about this schema file
schema_file:
  # Version of schema file
  # Incremented every merged schema change
  version: 6

# Data that doesn't fit into other categorical calculations
data:
  confidence_rating: int
  team_number: int
  match_number: int

# Calculations built around counting timeline actions with certain key:value pairs.
timeline_counts:
  auto_balls_low:
    type: int
    action_type: score_ball_low
    time: [135, 150]
  auto_balls_high:
    type: int
    action_type: score_ball_high
    time: [135, 150]
  tele_balls_low:
    type: int
    action_type: score_ball_low
    time: [0, 134]
  tele_balls_high:
    type: int
    action_type: score_ball_high
    time: [0, 134]

# Calculations built around saying whether or not a robot has completed a certain action in a match.
timeline_bools:
  control_panel_rotation:
    type: bool
    action_type: control_panel_rotation
  control_panel_position:
    type: bool
    action_type: control_panel_position

# Calculations built around measuring the time between two timeline actions.
# First item in each list is the start item key:value pair requirements, second item is the end item.
timeline_cycle_time:
  incap:
    type: int
    start_action: start_incap
    end_action: end_incap
  climb_time:
    type: int
    start_action: start_climb
    end_action: end_climb
